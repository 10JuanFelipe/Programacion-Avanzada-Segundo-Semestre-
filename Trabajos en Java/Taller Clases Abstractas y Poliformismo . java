import java.util.ArrayList;
import java.util.Scanner;

// Clase abstracta base: ProductoElectronico
abstract class ProductoElectronico {
    protected String nombre;
    protected double precio;
    protected int garantia;

    // Constructor
    public ProductoElectronico(String nombre, double precio, int garantia) {
        this.nombre = nombre;
        this.precio = precio;
        this.garantia = garantia;
    }

    // Métodos getter
    public String getNombre() {
        return nombre;
    }

    public double getPrecio() {
        return precio;
    }

    public int getGarantia() {
        return garantia;
    }

    // Método abstracto cargar
    public abstract void cargar();

    // Método para mostrar información del producto electrónico
    public void mostrarInformacion() {
        System.out.println("Nombre: " + nombre);
        System.out.println("Precio: $" + precio);
        System.out.println("Garantía: " + garantia + " meses");
    }
}

// Clase derivada: Celular
class Celular extends ProductoElectronico {
    private String modelo;

    // Constructor
    public Celular(String nombre, double precio, int garantia, String modelo) {
        super(nombre, precio, garantia);
        this.modelo = modelo;
    }

    // Implementación del método abstracto cargar para Celular
    @Override
    public void cargar() {
        System.out.println("Cargando el celular " + modelo + "...");
        System.out.println("Tiempo de carga: 2 horas");
    }
}

// Clase derivada: Computadora
class Computadora extends ProductoElectronico {
    private String tipo;

    // Constructor
    public Computadora(String nombre, double precio, int garantia, String tipo) {
        super(nombre, precio, garantia);
        this.tipo = tipo;
    }

    // Implementación del método abstracto cargar para Computadora
    @Override
    public void cargar() {
        System.out.println("Cargando la computadora " + tipo + "...");
        System.out.println("Tiempo de carga: 3 horas");
    }
}

public class TPyA_TallerHerencia {
    public static void main(String[] args) {
        ArrayList<ProductoElectronico> listaProductos = new ArrayList<>();

        Scanner scanner = new Scanner(System.in);
        int opcion;

        do {
            System.out.println("----- MENÚ -----");
            System.out.println("1. Agregar Celular");
            System.out.println("2. Agregar Computadora");
            System.out.println("3. Mostrar Productos");
            System.out.println("4. Salir");
            System.out.print("Ingrese una opción: ");
            opcion = scanner.nextInt();

            switch (opcion) {
                case 1:
                    System.out.println("Ingrese el nombre del celular: ");
                    String nombreCelular = scanner.next();
                    System.out.println("Ingrese el precio del celular: ");
                    double precioCelular = scanner.nextDouble();
                    System.out.println("Ingrese la garantía del celular (meses): ");
                    int garantiaCelular = scanner.nextInt();
                    System.out.println("Ingrese el modelo del celular: ");
                    String modeloCelular = scanner.next();
                    Celular celular = new Celular(nombreCelular, precioCelular, garantiaCelular, modeloCelular);
                    listaProductos.add(celular);
                    break;

                case 2:
                    System.out.println("Ingrese el nombre de la computadora: ");
                    String nombreComputadora = scanner.next();
                    System.out.println("Ingrese el precio de la computadora: ");
                    double precioComputadora = scanner.nextDouble();
                    System.out.println("Ingrese la garantía de la computadora (meses): ");
                    int garantiaComputadora = scanner.nextInt();
                    System.out.println("Ingrese el tipo de la computadora: ");
                    String tipoComputadora = scanner.next();
                    Computadora computadora = new Computadora(nombreComputadora, precioComputadora, garantiaComputadora, tipoComputadora);
                    listaProductos.add(computadora);
                    break;

                case 3:
                    if (listaProductos.isEmpty()) {
                        System.out.println("No hay productos en la lista.");
                    } else {
                        System.out.println("----- PRODUCTOS -----");
                        for (ProductoElectronico producto : listaProductos) {
                            producto.mostrarInformacion();
                            producto.cargar();
                            System.out.println();
                        }
                    }
                    break;

                case 4:
                    System.out.println("Saliendo del programa...");
                    break;

                default:
                    System.out.println("Opción inválida. Por favor, ingrese una opción válida.");
                    break;
            }

            System.out.println();
        } while (opcion != 4);
    }
}
